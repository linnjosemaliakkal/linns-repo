name: Build and Deploy

on:
  workflow_dispatch:

permissions:
  id-token: write      # ‚úÖ Required for OIDC authentication
  contents: read       # ‚úÖ Required for checkout

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: ca-central-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-avyh8dg2trdb
  APPLICATION_NAME: CodeDeployAppNameWithASG
  DEPLOYMENT_GROUP: CodeDeployGroupName

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üîç Debug AWS identity
        run: aws sts get-caller-identity

      - name: Build with Maven
        run: mvn -B package --file ${{ env.applicationfolder }}/pom.xml

      - name: Upload artifact to S3
        run: |
          aws s3 cp ${{ env.applicationfolder }}/target/${{ env.applicationfolder }}-1.0-SNAPSHOT.war \
          s3://${{ env.S3BUCKET }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üîç Debug AWS identity
        run: aws sts get-caller-identity

      - name: Deploy with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.APPLICATION_NAME }} \
            --deployment-group-name ${{ env.DEPLOYMENT_GROUP }} \
            --s3-location bucket=${{ env.S3BUCKET }},bundleType=war,key=${{ env.applicationfolder }}-1.0-SNAPSHOT.war





